{"version":3,"sources":["components/DeleteButton.js","components/PollList.js","views/Main.js","components/PollForm.js","views/AddPoll.js","views/Detail.js","views/Update.js","views/CastVote.js","App.js","serviceWorker.js","index.js"],"names":["props","pollsId","question","successCallback","id","onClick","e","axios","delete","then","res","alert","useState","polls","setPoll","useEffect","get","data","sort","a","b","createdAt","slice","map","Polls","index","key","to","_id","poll","idx","loaded","setLoaded","catch","err","console","log","PollList","removeFromDom","pollId","filter","auth","initialQuestion","initialOne","initialTwo","initialThree","initialFour","onSubmitProp","errorQuestion","errorValid","setQuestion","errorOne","optionOne","setOne","errorTwo","optionTwo","setTwo","optionThree","setThree","optionFour","setFour","onSubmit","preventDefault","unique","length","navigate","type","name","value","onChange","target","errors","setErrors","PollForm","post","errorResponse","response","errorArr","Object","keys","push","message","setPolls","DeleteButton","voteOne","voteTwo","voteThree","voteFour","item","put","App","className","Main","path","AddPoll","Detail","Update","CastVote","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a7e6fec6.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\nimport './PollListStyles.css';\r\nexport default props => {\r\n    const { pollsId, question, successCallback } = props;\r\n    const deletePoll = e => {\r\n        axios.delete('http://localhost:8000/api/polls/' + pollsId)\r\n            .then(res=>{\r\n                successCallback();\r\n            })\r\n            alert(\"Poll \" + question + \" got deleted\");\r\n    }\r\n    return (\r\n        <button id=\"delete\" onClick={deletePoll}>\r\n            Delete {question}\r\n        </button>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link } from '@reach/router';\r\nimport axios from 'axios';\r\nimport DeleteButton from './DeleteButton';\r\nimport './PollListStyles.css'\r\n\r\nexport default props => {\r\n    const [polls, setPoll] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/polls')\r\n            .then(res => setPoll(res.data.sort((a,b) => (a.createdAt < b.createdAt) ? 1 : ((b.createdAt < a.createdAt) ? -1 : 0))));\r\n    }, [polls])\r\n    const removeFromDom = pollID => {\r\n        setPoll(polls.filter(allPoll => allPoll._id !== pollID))\r\n    }\r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <div id=\"First\">\r\n                <h3>Top 3 Polls: </h3>\r\n                {polls.slice(0, 3).map((Polls, index) => {\r\n                    return(<p key={index}>\r\n                        <>{Polls.question} </>\r\n                        |\r\n                        <Link to={\"/polls/\" + Polls._id + \"/vote\"}>vote</Link>\r\n                        |\r\n                        <Link to={\"/polls/\" + Polls._id + \"/edit\"} poll={polls.question}>\r\n                            edit poll\r\n                        </Link> \r\n                        </p>\r\n                )})}\r\n            </div>\r\n            <div id=\"Second\">\r\n            <h3>All Polls</h3>\r\n            {polls.map((Polls, idx) => {\r\n                return (\r\n                \r\n                    <p key={idx}>\r\n                        <>{Polls.question} </>\r\n                        \r\n                        |\r\n                        <Link to={\"/polls/\" + Polls._id + \"/vote\"}>vote</Link>\r\n                        |\r\n                        <Link to={\"/polls/\" + Polls._id + \"/edit\"} poll={polls.question}>\r\n                            edit poll\r\n                        </Link> \r\n\r\n                    </p>\r\n                )\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from '@reach/router';\r\nimport PollList from '../components/PollList';\r\n\r\nexport default () => {\r\n    const [ polls, setPoll ] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/polls')\r\n            .then(res => {\r\n                setPoll(res.data)\r\n                setLoaded(true)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n    const removeFromDom = pollId => {\r\n        setPoll(polls.filter(auth => auth._id !== pollId));\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div>\r\n            <h1>Voting Dojo</h1>\r\n            <Link to={\"/polls/new\"}>Add a new Poll</Link>\r\n            {loaded && <PollList polls={polls} removeFromDom={removeFromDom}/>}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from '@reach/router';\r\n\r\n\r\nexport default props => {\r\n\r\n    const { initialQuestion, initialOne, initialTwo, initialThree, initialFour, onSubmitProp} = props;\r\n    const [ question, setQuestion ] = useState(initialQuestion, {errorQuestion: \"\", errorValid:\"\"}) ;\r\n    const [ optionOne, setOne ] = useState(initialOne, {errorOne: \"\"});\r\n    const [ optionTwo, setTwo ] = useState(initialTwo, {errorTwo: \"\"});\r\n    const [ optionThree, setThree ] = useState(initialThree);\r\n    const [ optionFour, setFour ] = useState(initialFour);\r\n\r\n\r\n    // const GiveRates = (e) => {\r\n    //     e.preventDefault();\r\n    //     const newRates = e.target.value\r\n    //     console.log(newRates, \"should be the input\");\r\n    //     setVotes(newRates);\r\n    //     console.log(votes);\r\n    // }\r\n\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        if(question.unique != true){\r\n            setQuestion({errorValid: \"Question must be unique\"});\r\n        }\r\n        if(question.length <= 10){\r\n            setQuestion({errorQuestion: \"Question must be at least 10 characters or more\"})\r\n        }\r\n        if(question.length == 0){\r\n            setQuestion({errorQuestion: \"Question is required\"})\r\n        }\r\n        if(optionOne.length == 0){\r\n            setOne({errorOne: \"Option 1 is required\"})\r\n        }\r\n        if(optionTwo.length == 0){\r\n            setTwo({errorTwo: \"Option 2 is required\"})\r\n        }\r\n        if(question.length >= 3 && optionOne.length > 0 && optionTwo.length > 0 && question.unique == true){\r\n            onSubmitProp({\r\n                question: question,\r\n                optionOne: optionOne,\r\n                optionTwo: optionTwo,\r\n                optionThree: optionThree,\r\n                optionFour: optionFour,\r\n               \r\n            });\r\n\r\n            navigate(\"/\");\r\n        \r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <div>\r\n            <Link to={'/'}>back to home</Link>\r\n            <form onSubmit={onSubmitHandler}>\r\n                <p>\r\n                    <label>Question:</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"question\"\r\n                        value={question}\r\n                        onChange={(e) => {setQuestion(e.target.value)}}/>\r\n                </p>\r\n                <p>{question.errorQuestion}</p>\r\n                <p>{question.errorValid}</p>\r\n                <p>\r\n                    <label>Option 1:</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"optionOne\"\r\n                        value={optionOne}\r\n                        onChange={(e) => {setOne(e.target.value)}}/>\r\n                </p>\r\n                <p>{optionOne.errorOne}</p>\r\n                <p>\r\n                    <label>Option 2:</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"optionTwo\"\r\n                        value={optionTwo}\r\n                        onChange={(e) => {setTwo(e.target.value)}}/>\r\n                </p>\r\n                <p>{optionTwo.errorTwo}</p>\r\n                <p>\r\n                    <label>Option 3:</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"optionThree\"\r\n                        value={optionThree}\r\n                        onChange={(e) => {setThree(e.target.value)}}/>\r\n                </p>\r\n                <p>\r\n                    <label>Option 4:</label><br/>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"optionFour\"\r\n                        value={optionFour}\r\n                        onChange={(e) => {setFour(e.target.value)}}/>\r\n                </p>\r\n                \r\n                <input type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport PollForm from '../components/PollForm';\r\nexport default props => {\r\n    const [polls, setPoll] = useState({})\r\n    const [errors, setErrors] = useState([])\r\n    const createPoll = poll => {\r\n        axios.post('http://localhost:8000/api/polls/new', poll)\r\n            .then(res=>{\r\n                console.log(res.data)\r\n            })  \r\n            .catch(err => {\r\n                let errorResponse = err.response.data.errors;\r\n                let errorArr = [];\r\n                for( const key of Object.keys(errorResponse)){\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Voting Dojo</h1>\r\n            {errors.map((err, idx) => {\r\n                return <p key={idx}>{err}</p>\r\n            })}\r\n            <PollForm onSubmitProp={createPoll} initialQuestion=\"\" initialOne=\"\" initialTwo=\"\" initialThree=\"\" initialFour=\"\" />\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Link, navigate } from  '@reach/router'\r\nimport axios from 'axios';\r\nimport DeleteButton from '../components/DeleteButton';\r\n\r\nexport default props => {\r\n    const [poll, setPolls] = useState({});\r\n    \r\n    const[loaded, setLoaded] = useState(true);\r\n    useEffect(() => { // render the page right away\r\n        axios.get(\"http://localhost:8000/api/polls/\" + props.id) \r\n            .then(res => setPolls({\r\n                ...res.data\r\n            }))\r\n    }, [])\r\n   \r\n    // const createLikes = e => {\r\n    //     e.preventDefault();\r\n    //     axios.put('http://localhost:8000/api/movie/' + movie._id, {likes: movie.likes + 1});\r\n    //     setLoaded(false);\r\n    // }\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <Link to={'/'}>back to home</Link>\r\n            <DeleteButton pollsId={poll._id} question={poll.question} successCallback={() => navigate(\"/\")}/>\r\n            <h3>{poll.question}</h3>\r\n            <p>{poll.optionOne} {poll.voteOne} votes</p>\r\n            <p>{poll.optionTwo} {poll.voteTwo} votes</p>\r\n            <p>{poll.optionThree} {poll.voteThree} votes</p>\r\n            <p>{poll.optionFour} {poll.voteFour} votes</p>\r\n            \r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate, Link } from '@reach/router';\r\nimport PollForm from '../components/PollForm';\r\nimport DeleteButton from '../components/DeleteButton';\r\nexport default props => {\r\n    const { id } = props;\r\n    const [poll, setPoll] = useState({});\r\n \r\n    const [loaded, setLoaded] = useState(false);\r\n    const [errors, setErrors] = useState([]);\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/polls/' + id)\r\n            .then(res => {\r\n                setPoll(res.data);\r\n                setLoaded(true);\r\n            })\r\n    }, [])\r\n    const updatePoll = item => {\r\n        axios.put('http://localhost:8000/api/polls/' + id, item)\r\n            .then(res => {console.log(res)\r\n            })\r\n    }\r\n\r\n    \r\n    \r\n   \r\n    return (\r\n        <div>\r\n            \r\n           \r\n            <h4>{poll.question}</h4>\r\n            {loaded && (\r\n                <>\r\n                {/* {errors.map((err, idx) => {\r\n                return <p key={idx}>{err}</p>\r\n                })} */}\r\n                    <PollForm\r\n                        initialQuestion={poll.question}\r\n                        initialOne={poll.optionOne}\r\n                        initialTwo={poll.optionTwo}\r\n                        initialThree={poll.optionThree}\r\n                        initialFour={poll.optionFour}\r\n                        onSubmitProp={updatePoll}\r\n                    />\r\n\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, navigate } from  '@reach/router'\r\n\r\nexport default props => {\r\n    const [poll, setPolls] = useState({});\r\n    \r\n    const[loaded, setLoaded] = useState(true);\r\n    useEffect(() => { // render the page right away\r\n        axios.get(\"http://localhost:8000/api/polls/\" + props.id) \r\n            .then(res => setPolls({\r\n                ...res.data\r\n            }))\r\n    }, [])\r\n\r\n    const getVoteOne = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/polls/' + poll._id, {voteOne: poll.voteOne + 1});\r\n        setLoaded(false);\r\n        navigate(\"/polls/\" + poll._id);\r\n    }\r\n    const getVoteTwo = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/polls/' + poll._id, {voteTwo: poll.voteTwo + 1});\r\n        setLoaded(false);\r\n        navigate(\"/polls/\" + poll._id);\r\n    }\r\n    const getVoteThree = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/polls/' + poll._id, {voteThree: poll.voteThree + 1});\r\n        setLoaded(false);\r\n        navigate(\"/polls/\" + poll._id);\r\n    }\r\n    const getVoteFour = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/polls/' + poll._id, {voteFour: poll.voteFour + 1});\r\n        setLoaded(false);\r\n        navigate(\"/polls/\" + poll._id);\r\n    }\r\n   \r\n    return(\r\n        <div>\r\n            <h1>Voting Dojo</h1>\r\n            <h3>{poll.question}</h3>\r\n            <h4>{poll.optionOne} <button onClick={getVoteOne}>Vote {poll.optionOne}</button></h4>\r\n            <h4>{poll.optionTwo} <button onClick={getVoteTwo}>Vote {poll.optionTwo}</button></h4>\r\n            <h4>{poll.optionThree} <button onClick={getVoteThree}>{poll.optionThree}</button></h4>\r\n            <h4>{poll.optionFour} <button onClick={getVoteFour}>{poll.optionFour}</button></h4>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport { Router } from '@reach/router';\nimport Main from './views/Main';\nimport AddPoll from './views/AddPoll';\nimport Detail from './views/Detail';\nimport Update from './views/Update';\nimport CastVote from './views/CastVote';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Main path=\"/\"/>\n        <AddPoll path=\"polls/new\"/>\n        <Detail path=\"polls/:id\"/>\n        <Update path=\"polls/:id/edit\"/>\n        <CastVote path=\"polls/:id/vote\"/>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}